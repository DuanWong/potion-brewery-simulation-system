// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PotionBrewerySystem.Models;

#nullable disable

namespace PotionBrewerySystem.Migrations
{
    [DbContext(typeof(BreweryContext))]
    partial class BreweryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("PotionBrewerySystem.Models.BrewedPotion", b =>
                {
                    b.Property<int>("BrewedPotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Attributes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BrewedTime")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RecipeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BrewedPotionID");

                    b.HasIndex("RecipeID");

                    b.ToTable("BrewedPotions");

                    b.HasData(
                        new
                        {
                            BrewedPotionID = 1,
                            Attributes = "Fire Resistance, Warmth",
                            BrewedTime = "2025-05-15T10:30:00.0000000",
                            CustomName = "Flame Elixir",
                            RecipeID = 1
                        },
                        new
                        {
                            BrewedPotionID = 2,
                            Attributes = "Invisibility, Stealth Boost",
                            BrewedTime = "2025-05-16T14:00:00.0000000",
                            CustomName = "Shadow Draught",
                            RecipeID = 2
                        },
                        new
                        {
                            BrewedPotionID = 3,
                            Attributes = "Fire Resistance, Warmth, Speed Boost",
                            BrewedTime = "2025-05-17T09:15:00.0000000",
                            CustomName = "Flame Elixir Plus",
                            RecipeID = 1
                        });
                });

            modelBuilder.Entity("PotionBrewerySystem.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinStockThreshold")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("IngredientID");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientID = 1,
                            MinStockThreshold = 10,
                            Name = "Unicorn Hair",
                            StockQuantity = 100
                        },
                        new
                        {
                            IngredientID = 2,
                            MinStockThreshold = 5,
                            Name = "Phoenix Feather",
                            StockQuantity = 50
                        },
                        new
                        {
                            IngredientID = 3,
                            MinStockThreshold = 8,
                            Name = "Dragon Scale",
                            StockQuantity = 80
                        });
                });

            modelBuilder.Entity("PotionBrewerySystem.Models.PotionRecipe", b =>
                {
                    b.Property<int>("RecipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BrewingTimeSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeID");

                    b.ToTable("PotionRecipes");

                    b.HasData(
                        new
                        {
                            RecipeID = 1,
                            BrewingTimeSeconds = 5,
                            Description = "Restores health.",
                            Name = "Healing Elixir"
                        },
                        new
                        {
                            RecipeID = 2,
                            BrewingTimeSeconds = 8,
                            Description = "Grants invisibility.",
                            Name = "Invisibility Brew"
                        });
                });

            modelBuilder.Entity("PotionBrewerySystem.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredientID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecipeIngredientID");

                    b.HasIndex("IngredientID");

                    b.HasIndex("RecipeID");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeIngredientID = 1,
                            IngredientID = 1,
                            Quantity = 3,
                            RecipeID = 1
                        },
                        new
                        {
                            RecipeIngredientID = 2,
                            IngredientID = 3,
                            Quantity = 2,
                            RecipeID = 1
                        },
                        new
                        {
                            RecipeIngredientID = 3,
                            IngredientID = 2,
                            Quantity = 4,
                            RecipeID = 2
                        },
                        new
                        {
                            RecipeIngredientID = 4,
                            IngredientID = 3,
                            Quantity = 3,
                            RecipeID = 2
                        });
                });

            modelBuilder.Entity("PotionBrewerySystem.Models.BrewedPotion", b =>
                {
                    b.HasOne("PotionBrewerySystem.Models.PotionRecipe", "PotionRecipe")
                        .WithMany()
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PotionRecipe");
                });

            modelBuilder.Entity("PotionBrewerySystem.Models.RecipeIngredient", b =>
                {
                    b.HasOne("PotionBrewerySystem.Models.Ingredient", "Ingredient")
                        .WithMany()
                        .HasForeignKey("IngredientID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PotionBrewerySystem.Models.PotionRecipe", "PotionRecipe")
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("PotionRecipe");
                });

            modelBuilder.Entity("PotionBrewerySystem.Models.PotionRecipe", b =>
                {
                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
